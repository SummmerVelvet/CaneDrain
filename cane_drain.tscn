[gd_scene load_steps=12 format=3 uid="uid://bgcgrm0uvumfx"]

[ext_resource type="Texture2D" uid="uid://bnl5ccaoviauq" path="res://cane.png" id="1_grwhf"]
[ext_resource type="PackedScene" uid="uid://cmeeoveybolbt" path="res://tree.tscn" id="2_pdkk3"]
[ext_resource type="PackedScene" uid="uid://doicyy1qs3er3" path="res://enemy.tscn" id="3_jhfyc"]

[sub_resource type="Gradient" id="Gradient_2yhcr"]
offsets = PackedFloat32Array(0, 0.0584416, 0.720779, 1)
colors = PackedColorArray(0.737722, 0.914287, 0.957022, 1, 0.65472, 0.8497, 0.96437, 1, 0.274296, 0.553676, 0.998046, 1, 0.252228, 0.536505, 1, 1)

[sub_resource type="GradientTexture2D" id="GradientTexture2D_tauxp"]
gradient = SubResource("Gradient_2yhcr")

[sub_resource type="GDScript" id="GDScript_i4txt"]
script/source = "# Player.gd
extends CharacterBody2D

@export var acceleration := 1200.0
@export var max_speed := 600.0
@export var turning_friction := 0.97  # Higher value = less grip when turning
@export var natural_friction := 0.995  # Very low friction when not accelerating
@export var min_boost_speed := 800.0
@export var max_boost_speed := 2000.0
@export var charge_rate := 1.5
@export var boost_duration := 0.3

var charge_amount := 0.0
var is_charging := false
var is_boosting := false
var movement_direction := Vector2.ZERO
var boost_timer: Timer

func _ready():
	boost_timer = Timer.new()
	boost_timer.one_shot = true
	boost_timer.timeout.connect(_on_boost_end)
	add_child(boost_timer)

func _physics_process(delta):
	handle_skating_movement(delta)
	handle_charge(delta)
	move_and_slide()
	
func handle_skating_movement(delta):
	var input_dir = Vector2(
		Input.get_axis(\"ui_left\", \"ui_right\"),
		Input.get_axis(\"ui_up\", \"ui_down\")
	).normalized()
	
	if input_dir != Vector2.ZERO:
		movement_direction = input_dir
		
		# Apply acceleration in input direction, but maintain more momentum
		var acceleration_vector = input_dir * acceleration * delta
		
		# The faster we're going, the harder it is to change direction
		var current_speed = velocity.length()
		var turn_resistance = clamp(current_speed / max_speed, 0.1, 1.0)
		
		# Blend between current velocity and new direction
		velocity = velocity.lerp(velocity + acceleration_vector, 1.0 - turn_resistance)
		
		# Apply turning friction when changing direction
		if velocity.normalized().dot(input_dir) < 0.9:  # If turning sharply
			velocity *= turning_friction
	else:
		# Apply very low friction when not inputting direction
		velocity *= natural_friction
	
	# Only apply speed limit when not boosting
	if not is_boosting and velocity.length() > max_speed:
		velocity = velocity.normalized() * max_speed

func handle_charge(delta):
	if Input.is_action_just_pressed(\"ui_select\"):
		start_charging()
	elif Input.is_action_pressed(\"ui_select\") and is_charging:
		continue_charging(delta)
	elif Input.is_action_just_released(\"ui_select\") and is_charging:
		release_charge()

func start_charging():
	if velocity.length() > 10:
		is_charging = true
		charge_amount = 0.0

func continue_charging(delta):
	charge_amount = min(charge_amount + charge_rate * delta, 1.0)
	update_charge_indicator()

func release_charge():
	if not is_charging:
		return
		
	is_charging = false
	
	var boost_direction = velocity.normalized()
	var boost_speed = lerp(min_boost_speed, max_boost_speed, charge_amount)
	
	velocity = boost_direction * boost_speed
	is_boosting = true
	boost_timer.start(boost_duration)
	
	charge_amount = 0.0
	hide_charge_indicator()

func _on_boost_end():
	is_boosting = false
	velocity *= 0.8  # Retain more speed after boost

func update_charge_indicator():
	print(\"Charge: \", charge_amount * 100, \"%\")

func hide_charge_indicator():
	pass
"

[sub_resource type="CircleShape2D" id="CircleShape2D_25poq"]
radius = 9.0

[sub_resource type="Gradient" id="Gradient_15avs"]
offsets = PackedFloat32Array(0, 0.385542)
colors = PackedColorArray(1, 1, 1, 1, 1, 0.154201, 0.337259, 1)

[sub_resource type="GradientTexture1D" id="GradientTexture1D_mugje"]
gradient = SubResource("Gradient_15avs")

[sub_resource type="GDScript" id="GDScript_s6oqn"]
script/source = "extends StaticBody2D


# Called when the node enters the scene tree for the first time.
func _ready() -> void:
	pass # Replace with function body.


# Called every frame. 'delta' is the elapsed time since the previous frame.
func _process(delta: float) -> void:
	pass
"

[sub_resource type="CapsuleShape2D" id="CapsuleShape2D_uyy0j"]
radius = 4.0
height = 26.0

[node name="CaneDrain" type="Node2D"]
position = Vector2(-878, -257)
scale = Vector2(2.53456, 2.53456)

[node name="Skating Rink" type="Sprite2D" parent="."]
position = Vector2(576.09, 324.91)
scale = Vector2(17.9972, 10.0909)
texture = SubResource("GradientTexture2D_tauxp")
metadata/_edit_group_ = true

[node name="StaticBody2D" type="StaticBody2D" parent="Skating Rink"]
visible = false

[node name="CollisionPolygon2D" type="CollisionPolygon2D" parent="Skating Rink/StaticBody2D"]
polygon = PackedVector2Array(31.4999, 30.4323, 31.3888, -30.8108, -31.8989, -31.5045, -31.6211, 29.7386, 31.7222, 29.9368, 31.4444, 30.8287, -32.6768, 31.1259, -33.4547, -33.8829, 32.3334, -32.4955)

[node name="Pengu" type="CharacterBody2D" parent="."]
position = Vector2(372.451, 120.731)
script = SubResource("GDScript_i4txt")
metadata/_edit_group_ = true

[node name="CollisionShape2D" type="CollisionShape2D" parent="Pengu"]
shape = SubResource("CircleShape2D_25poq")

[node name="Sprite2D" type="Sprite2D" parent="Pengu"]
position = Vector2(2.99513e-05, 0.031248)
scale = Vector2(0.0703125, 17.9375)
texture = SubResource("GradientTexture1D_mugje")

[node name="RayCast2D" type="RayCast2D" parent="Pengu"]
position = Vector2(0.0113664, 0.0184462)
target_position = Vector2(-2.76181, 1.18364)

[node name="Camera2D" type="Camera2D" parent="Pengu"]

[node name="Cane" type="StaticBody2D" parent="."]
position = Vector2(853.008, 203.586)
script = SubResource("GDScript_s6oqn")
metadata/_edit_group_ = true

[node name="Sprite2D" type="Sprite2D" parent="Cane"]
texture = ExtResource("1_grwhf")

[node name="CollisionShape2D" type="CollisionShape2D" parent="Cane"]
shape = SubResource("CapsuleShape2D_uyy0j")

[node name="Tree" parent="." instance=ExtResource("2_pdkk3")]
position = Vector2(495.944, 200.429)

[node name="Enemy" parent="." instance=ExtResource("3_jhfyc")]
position = Vector2(533.82, 198.062)

[node name="Enemy2" parent="." instance=ExtResource("3_jhfyc")]
position = Vector2(583.139, 169.26)

[node name="Enemy3" parent="." instance=ExtResource("3_jhfyc")]
position = Vector2(714.917, 175.967)

[node name="Enemy4" parent="." instance=ExtResource("3_jhfyc")]
position = Vector2(704.659, 282.495)
